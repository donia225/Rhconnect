# Generated by Django 5.1.7 on 2025-03-28 22:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Formation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField(blank=True, null=True)),
                ('duree', models.IntegerField()),
                ('type_formation', models.CharField(choices=[('En ligne', 'En ligne'), ('Présentiel', 'Présentiel'), ('Hybride', 'Hybride')], max_length=50)),
                ('cout', models.FloatField(blank=True, null=True)),
                ('certification', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('candidat', 'Candidat'), ('gestionnaire_rh', 'Gestionnaire RH'), ('recruteur', 'Recruteur')], default='candidat', max_length=20)),
                ('groups', models.ManyToManyField(related_name='recrutement_users', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='recrutement_users_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Candidat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_tel', models.CharField(blank=True, max_length=8, null=True)),
                ('adresse', models.TextField(blank=True, null=True)),
                ('cv', models.FileField(blank=True, null=True, upload_to='uploads/cv/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='candidat_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Candidature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_postulation', models.DateField(auto_now_add=True)),
                ('score_matching', models.FloatField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('ACCEPTEE', 'Acceptée'), ('REJETEE', 'Rejetée')], default='EN_ATTENTE', max_length=20)),
                ('analyse_effectuee', models.BooleanField(default=False)),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidatures', to='recrutement.candidat')),
            ],
        ),
        migrations.CreateModel(
            name='IAModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_matching', models.FloatField(blank=True, null=True)),
                ('recommandations', models.TextField(blank=True, null=True)),
                ('candidature', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analyse_ia', to='recrutement.candidature')),
            ],
        ),
        migrations.CreateModel(
            name='OffreEmploi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('salaire', models.FloatField()),
                ('recruteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offres', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='candidature',
            name='offre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidatures', to='recrutement.offreemploi'),
        ),
        migrations.CreateModel(
            name='ParticipationFormation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formations', to='recrutement.candidat')),
                ('formation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='recrutement.formation')),
            ],
        ),
    ]
